<Graph ClassName="CRActivityExtensions" Source="#CDATA" IsNew="True" FileType="NewFile">
    <CDATA name="Source"><![CDATA[using PX.Common;
using PX.Data.EP;
using PX.Data;
using PX.Objects.CR;
using PX.Objects.CS;
using PX.Objects.CT;
using PX.Objects.EP;
using PX.Objects.GL;
using PX.Objects.PM;
using PX.Objects;
using PX.SM;
using PX.TM;
using PX.Web.UI;
using System.Collections.Generic;
using System;

namespace Mailchimp
{

    public static class MailchimpActivityType
    {
        public const string MC = "MC";

        public class mailchimpType : Constant<String>
        {
            public mailchimpType()
                : base(MC)
            {
            }
        }
    }


    public class CRActivityExt : PXCacheExtension<PX.Objects.CR.CRActivity>
    {

        #region UsrMailchimpAction
        [PXDBString(25)]
        [PXUIField(DisplayName="Mailchimp Action")]

        public virtual string UsrMailchimpAction { get; set; }
        public abstract class usrMailchimpAction : IBqlField { }
        #endregion

        #region UsrMailchimpTimestamp
        [PXDBString(25)]
        [PXUIField(DisplayName="Mailchimp Timestamp")]

        public virtual string UsrMailchimpTimestamp { get; set; }
        public abstract class usrMailchimpTimestamp : IBqlField { }
        #endregion

        #region UsrMailchimpClickURL
        [PXDBString(200)]
        [PXUIField(DisplayName="Mailchimp Click URL")]

        public virtual string UsrMailchimpClickURL { get; set; }
        public abstract class usrMailchimpClickURL : IBqlField { }
        #endregion

        #region UsrMailchimpCampaignID
        [PXDBString(10)]
        [PXUIField(DisplayName="MailchimpCampaignID")]

        public virtual string UsrMailchimpCampaignID { get; set; }
        public abstract class usrMailchimpCampaignID : IBqlField { }
        #endregion
    }
    

    [PXNonInstantiatedExtension]
    public sealed class CRCRActivityExistingColumn : PXCacheExtension<PX.Objects.CR.CRActivity>
    {
        #region Type  
        [PXMergeAttributes(Method = MergeMethod.Append)]
        [PXRemoveBaseAttribute(typeof(PXRestrictorAttribute))]

        [PXRestrictor(typeof(Where<EPActivityType.active, Equal<True>>), "Activity Type '{0}' is not active.", new[] { typeof(EPActivityType.type) })]
       
        // On the Activity Screen, don't let Mailchimp be an option in the dropdown and throw and error if it is somehow selected
        // Note: this restrictor does not prevent "Add Mailchimp" from appearing in the Add Activities dropdown on the Activities tab of BAccounts, Contacts, etc.
        [PXRestrictor(typeof(Where<EPActivityType.type, NotEqual<MailchimpActivityType.mailchimpType>>), // Don't allow the Mailchimp type to be selected
            "This type of activity can only be generated by Mailchimp", typeof(EPActivityType.type))]

        [PXRestrictor(typeof(Where<EPActivityType.isInternal, Equal<True>, Or<EPActivityType.isSystem, Equal<True>,
            Or<EPActivityType.application, Equal<ActivityTypesApplicationAttribute.integration>>>>), 
            "Activity Type '{0}' is external. Only portal should create activities of this type.", new[] { typeof(EPActivityType.type) })]


        public string Type { get; set; }
        #endregion
    }
}]]></CDATA>
</Graph>