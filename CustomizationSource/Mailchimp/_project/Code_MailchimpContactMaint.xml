<Graph ClassName="MailchimpContactMaint" Source="#CDATA" IsNew="True" FileType="ExistingGraph">
    <CDATA name="Source"><![CDATA[using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using PX.Common;
using PX.Data;
using PX.Objects.AR;
using PX.Objects.CR.MassProcess;
using PX.Objects.GL;
using PX.Objects.CS;
using PX.Objects.EP;
using PX.SM;
using PX.Objects;
using PX.Objects.CR;
using MailchimpPXLib;

namespace Mailchimp
{
  public class ContactMaint_Extension : PXGraphExtension<ContactMaint>
  {

        public PXSelect<CRSetup> Setup;
        
        public void getMailchimpStatus(Contact contact, bool isMassProcess = false)
        {

            Base.ContactCurrent.Current = contact;
            ContactExt ext = contact.GetExtension<ContactExt>();

            CRSetup setup = Base.Setup.Current;
            CRSetupExt setupExt = setup.GetExtension<CRSetupExt>();

            var apiKey = setupExt.UsrMailchimpAPIKey;
            var manager = new MailchimpPXManager(apiKey);

            var member = manager.GetMember(ext.UsrMailchimpListID, contact.EMail);

            Base.ContactCurrent.Cache.SetValue(contact, "UsrMailchimpListStatus", member.Status.ToString());
            Base.ContactCurrent.Update(contact);
            Base.ContactCurrent.Cache.IsDirty = true;
            Base.Persist();

            if (isMassProcess)
            {
                PXProcessing.SetInfo(String.Format(
                    "Contact {0} has been updated.",
                    contact.DisplayName));
            }
        }

        
        public PXAction<Contact> SyncMailchimpStatus;
        [PXProcessButton]
        [PXUIField(DisplayName = "Sync Mailchimp")]
        protected virtual IEnumerable syncMailchimpStatus(PXAdapter adapter)
        {
            foreach (Contact contact in adapter.Get())
            {
                this.Base.Actions.PressSave();

                PXLongOperation.StartOperation(Base, delegate ()
                {
                    ContactMaint graph = PXGraph.CreateInstance<ContactMaint>();
                    ContactMaint_Extension graphExt = graph.GetExtension<ContactMaint_Extension>();
                    graphExt.getMailchimpStatus(contact);
                });

                yield return contact;
            }
        }




        #region Event Handlers

        #endregion
    }
}]]></CDATA>
</Graph>